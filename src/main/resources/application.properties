server.ssl.enabled=true
# KeyStore
server.ssl.key-store-type=JKS
# Generated using: keytool -genkey -keystore server.jks -alias server -keyalg RSA -keysize 2048 -validity 3950
server.ssl.key-store=classpath:server.jks
server.ssl.key-store-password=12345678
server.ssl.key-alias=server
server.ssl.key-password=1234567

# Truststore
# Generated using: keytool -genkey -keystore client.jks -alias client -keyalg RSA -keypass 1234567 -storepass 12345678 -keysize 2048 -validity 3950
# Export cert from client keystore using: keytool -export -alias client -keystore client.jks -rfc -file client.cer
# Creating truststore using (password: 123456789): keytool -import -file ./client.cer -alias client -keystore clientTrustStore.jks
# Generating PKCS12 keystore to import to browsers(because browsers does not support JKS), using either:
# keytool -importkeystore -srckeystore client.jks -destkeystore client.p12 -srcstoretype JKS -deststoretype PKCS12 -srcstorepass 12345678 -deststorepass 12345678 -srcalias client -destalias client -srckeypass 1234567 -destkeypass 12345678
# keytool -importkeystore -srckeystore client.jks -destkeystore client.p12 -srcstoretype JKS -deststoretype PKCS12 -srcstorepass 12345678 -deststorepass 12345678 -srcalias client -destalias client -srckeypass 1234567 -destkeypass 12345678 -noprompt
# NOTE: SAME password between keystore and key as it's mandatory for PKCS12
server.ssl.trust-store=classpath:clientTrustStore.jks
server.ssl.trust-store-password=123456789
server.ssl.client-auth=need

